import net.cherokeedictionary.chrbook.sections.GreetingsSection
import net.cherokeedictionary.transliteration.SyllabaryUtil

//def chapterTex = new File('templates/chapter.tex.template')
//def chapter = new File('templates/chapter.template')
//def fileName = isPrintVersion ? chapterTex : chapter
//fileName = new File("templates/printCitations.tex.template")

boolean isPrintVersion = true

def engine = new groovy.text.GStringTemplateEngine()
def extension = isPrintVersion ? "tex" : "html"
def bindMap = [:]
def citationIndex = 0
def citationMap = [:]
def answerKey = [:]

def output = new File("bookOutput/book.${extension}")
output.write("")

def chapterTemplate = isPrintVersion ? 'chapter.tex.template' : 'chapter.template'
def whatYouWillLearnTemplate = isPrintVersion ? 'whatYouWillLearn.tex.template' : 'whatYouWillLearn.template'
def dialogVocabTemplate = isPrintVersion ? 'dialogVocab.tex.template' : 'dialogVocab.template'
def footnoteTemplate = isPrintVersion ? 'footnote.tex.template' : 'footnote.template'
def wordBreakdownTemplate = isPrintVersion ? 'wordBreakdown.tex.template' : 'wordBreakdown.template'
def exerciseTemplate = isPrintVersion ? 'exercise.tex.template' : 'exercise.template'
def bookSectionTemplate = isPrintVersion ? 'bookSection.tex.template' : 'bookSection.template'

def clearCitations = {
    citationIndex = 0
    citationMap = [:]
}

def writeOutTemplate = {fileName, binding ->
    def file = new File("src/main/resources/templates/${fileName}")
    def template = engine.createTemplate(file).make(binding)
    output.append(template.toString())
}

def exercise = {title, text, answers ->
    writeOutTemplate(exerciseTemplate, [answerKey: answerKey, title: SyllabaryUtil.mixedTransliteration("alisinahisdisgv digvdodi"), text: text, answers: answers, answersTranslit: SyllabaryUtil.mixedTransliteration(answers)])
    if (answers) {
        answerKey."${text}" = answers
    }
}

def footnoate = { src, linkTitle, link ->
    writeOutTemplate(footnoteTemplate, [src: src, linkTitle: linkTitle, link: link])
}

def wordBreakdown = {anchor, title ->
    writeOutTemplate(wordBreakdownTemplate, [anchor: anchor, title: title])
}

def bookSection = {title, phonetic ->
    writeOutTemplate(bookSectionTemplate, [title: title, phonetic: SyllabaryUtil.mixedTransliteration(phonetic)])
}

def chapter = {bindings ->
    writeOutTemplate(chapterTemplate, bindings)
}

def whatYouWillLearn = {bindings ->
    writeOutTemplate(whatYouWillLearnTemplate, bindings)
}

def dialogVocab = {bindings ->
    writeOutTemplate(dialogVocabTemplate, bindings)
}

def addText = {
    output.append(it)
    if (!isPrintVersion) {
        output.append("<br/>")
    }
}

def transl = {
    SyllabaryUtil.tsalagiToSyllabary(it)
}

def redSpan = {
    if (isPrintVersion) {
        "\\textcolor{red}{${it}}"
    } else {
        "<span style=\"color:red\">${it}</span>"
    }
}
def br = {
    if (!isPrintVersion) {
        "<br/>"
    } else {
        ""
    }
}
def greetingsSection = new GreetingsSection()
greetingsSection.addBinding('isPrintVersion', isPrintVersion)
greetingsSection.addBinding('showPhonetic', true)

chapter(greetingsSection.createBinding())
whatYouWillLearn(greetingsSection.createBinding())
dialogVocab(greetingsSection.createBinding())


footnoate('Osi will be discussed more in the section ', 'Word Breakdown - Tohi and Osi', 'wordBreakdownTohiOsi')
wordBreakdown("wordBreakdownTohiOsi", "${transl("dohi")} and ${transl("osi")} Tohi and Osi")
exercise(SyllabaryUtil.mixedTransliteration("alisinahisdisgv digvdodi"), "1. Hello, Mary 2. Hello, Mark 3. Hello, Daniel 4. Hello, Susan", "1. (O)siyo, Meli. 2. (O)siyo, Maga. 3. (O)siyo, Danili 4. (O)siyo, Susani")
bookSection("Hello", "osiyo")

addText("In Cherokee there is only one way to say 'Good Morning,' 'Good Afternoon,' 'Good Evening,' and Hello; that is by saying ${transl("osiyo")} ${redSpan("(o)siyo")} or the shortened version ${transl("siyo")} ${redSpan("siyo")}.")
br()

//    <g:footnote src="We will follow the convention of placing optional syllables in parenthesis.  You will see this written as (O)siyo.  The parentheses around the 'O' mean that the voicing of the 'O' is optional."/><br/>
//    <g:footnote src="Osi will be discussed more in the section " linkTitle="Word Breakdown - Tohi and Osi" link="wordBreakdownTohiOsi"/>
//    <br/>
//    <g:if test="${showExercise}">
//    %{--        <g:exercise text="${["Hello, Mary", "Hello, Mark", "Hello, Daniel", "Hello, Susan"]}" answers="${["1. (O)siyo, Meli.", "(O)siyo, Maga.", "(O)siyo, Danili", "(O)siyo, Susani"]}"/>--}%
//    <g:exercise text="1. Hello, Mary 2. Hello, Mark 3. Hello, Daniel 4. Hello, Susan" answers="1. (O)siyo, Meli. 2. (O)siyo, Maga. 3. (O)siyo, Danili 4. (O)siyo, Susani"/>
//    </g:if>
//</g:bookSection>
//<br/>
//<g:render template="gsf/sections/goodbye" model="[showExercise:true]"/>

println answerKey
